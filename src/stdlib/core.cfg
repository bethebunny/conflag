{
    or: (a, b) => if(a, a, b),
    and: (a, b) => if(a, b, a),
    not: (a) => if(a, false, true),
    any: (array) => reduce((s, v) => or(s, bool(v)), array, false),
    all: (array) => reduce((s, v) => and(s, bool(v)), array, true),
    contains: (array, v) => any(map((vv) => v == vv, array)),

    flatmap: (f, array) => flatten(map(f, array)),
    optionmap: (f, array) => flatmap((v) => {
        fv: f(v),
        r: if(fv == null, [], [fv]),
    }.r, array),

    sum: (vs) => reduce((s, v) => s + v, vs, 0),
    merge_all: (vs) => reduce((s, v) => s + v, vs, {}),
    flatten: (vs) => reduce((s, v) => s + v, vs, []),
}